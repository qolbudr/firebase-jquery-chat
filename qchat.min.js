class QChat {
  static startChat({myId, toId, myName, toName, message}) {
    let docMyId = myId.toString();
    let docToId = toId.toString();

    db.collection('user').doc(docMyId).set({
      id: myId,
      name: myName,
      created: + new Date()
    },
    {
      merge: true
    }); 

    db.collection('user').doc(docToId).set({
      id: toId,
      name: toName,
      created: + new Date()
    },
    {
      merge: true
    }); 

    db.collection('group').add({
      created: + new Date(),
      createdBy: myId,
      members: [myId, toId],
      recentMessage: {
        text: message,
        read: false,
        sent: + new Date(),
        sender: myId
      }
    },
    {
      merge: true
    }).then(function(docRef) {
      db.collection(`message/${docRef.id}/messages`).doc().set(
        {
          sent: + new Date(),
          sender: myId,
          message: message,
          read: false
        }
      )
    })
  }

  static getMemberData(myId, arrayofMember, groupId) {
    let toId = this
    arrayofMember.forEach(function(member) {
      if(member != myId) {
        toId = member;
      }
    })

    let docToId = toId.toString();
    db.collection('user').doc(docToId).get().then(function(data) {
      let d = data.data();
      $(`.content[groupId=${groupId}] h4`).text(d.name)
    })
  }

  static getUnreadCount(myId, groupId) {
    db.collection(`message/${groupId}/messages`).where('read', '==', false).onSnapshot(function(data) {
      let array = [];

      data.forEach(function(value) {
        const d = value.data();
        if(d.sender != myId) {
          d.id = value.id
          array.push(d);
        }
      })

      if(array.length > 0) {
        $(`.content[groupId=${groupId}] .unread`).show()
        $(`.content[groupId=${groupId}] .unread`).text(array.length)
      } else {
        $(`.content[groupId=${groupId}] .unread`).hide()
      }
    })
  }

  static getChat(myId, groupId) {
    db.collection(`message/${groupId}/messages`).orderBy('sent', 'desc').onSnapshot(function(value) {
      $(".chat-content-list").html('');
      value.forEach(function(data) {
        let chat = data.data();
        if(chat.sender != myId) {
          let date = new Date(chat.sent * 1000)
          let time = `${date.getHours()}:${date.getMinutes()}`
          $(".chat-content-list").append(
            `
              <div class="chat-reply">
                <div class="text">
                  <div class="text-data">${chat.message}</div>
                  <div class="text-time">${time}</div>
                </div>
              </div>
            `
          )
        } else {
          let date = new Date(chat.sent * 1000)
          let time = `${date.getHours()}:${date.getMinutes()}`
          $(".chat-content-list").append(
            `
              <div class="chat-send">
                <div class="text">
                  <div class="text-data">${chat.message}</div>
                  <div class="text-time">${time}</div>
                </div>
              </div>
            `
          )
        }
      })
    })
  }

  static markAsRead(myId, groupId) {
    let groupRef = db.doc(`group/${groupId}`)
    let messageRef = db.collection(`message/${groupId}/messages`)
    groupRef.get().then(function(value) {
      let data = value.data();
      if(data.recentMessage.sender != myId) {
        groupRef.set({
          recentMessage: {
            read: true
          }
        }, 
        {
          merge: true
        })
      }
    })

    messageRef.where('read', '==', false).get().then(function(value) {
      value.forEach(function(data) {
        let d = data.data();

        if(d.sender != myId) {
          messageRef.doc(data.id).set({
            read: true
          }, 
          {
            merge: true
          })
        }
      })
    })
  }

  static getListChat(settings) {
    const vm = this
    return new Promise((resolve, reject) => {
      const groupRef = db.collection('group')
      groupRef
       .where('members', 'array-contains', settings.myId)
       .onSnapshot((querySnapshot) => {
         const allGroups = []
         querySnapshot.forEach((doc) => {
           const data = doc.data()
           data.id = doc.id
           if (data.recentMessage) allGroups.push(data)
         })
         vm.groups = allGroups
         $(".chat-list-person").html('');
         allGroups.forEach(function(list) {
          let date = new Date(list.recentMessage.sent * 1000);
          let time = `${date.getHours()}:${date.getMinutes()}`

          $(".chat-list-person").append(`
            <div class="content" groupId="${list.id}">
              <div class="list-data">
                <div class="dp-picture">
                  <img src="https://www.sunsetlearning.com/wp-content/uploads/2019/09/User-Icon-Grey-300x300.png">
                </div>
                <div class="dp-message">
                  <h4>Qolbu</h4>
                  <div class="dp-status">
                    <div class="status-icon">
                      <div class="sent">
                        <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="#bdbdbd" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check"><polyline points="20 6 9 17 4 12"></polyline></svg>
                      </div>
                      <div class="read">
                        <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="${settings.color}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check"><polyline points="20 6 9 17 4 12"></polyline></svg>
                        <svg style="margin-left: -13px;" xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="${settings.color}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check"><polyline points="20 6 9 17 4 12"></polyline></svg>
                      </div>
                    </div>
                    <h5>${list.recentMessage.text}</h5>
                  </div>
                </div>
              </div>
              <div class="msg-status">
                <h6>${time}</h6>
                <div class="unread">1</div>
              </div>
            </div>
          `)

          if(list.recentMessage.sender != settings.myId) {
            $(`.content[groupId=${list.id}] .status-icon`).hide()
          } else {
            $(`.content[groupId=${list.id}] .status-icon`).show()
            if(list.recentMessage.read == true) {
              $(`.content[groupId=${list.id}] .read`).show()
              $(`.content[groupId=${list.id}] .sent`).hide()
            } else {
              $(`.content[groupId=${list.id}] .sent`).show()
              $(`.content[groupId=${list.id}] .read`).hide()
            }
          }

          QChat.getMemberData(settings.myId, list.members, list.id);
          QChat.getUnreadCount(settings.myId, list.id);

          $(".chat-list-person .content").click(function() {
            let height = $(".chat-box").height() - 117
            let name = $(this).find('h4:first').text();
            let groupId = $(this).attr('groupId');

            $(".chat-list-person").slimScroll({height: '0'});
            $(".chat-content-list").slimScroll({height: height});
            $(".chat-content").show();
            $(".chat-back").show();
            $(".chat-title").text(name)
            QChat.getChat(settings.myId, groupId);
            QChat.markAsRead(settings.myId, groupId);
          })
         })
       })
     })
  }

}

(function ($) {
    $.fn.qchatInit = function( options ) {
        var settings = $.extend({
          color: '#2c9cff',
          myId: null
        }, options );

        if(settings.myId == null) {
          throw 'Your id cannot be null';
        }

        QChat.getListChat(settings);

        this.append(`
          <div class="chat-bubble">
            <div class="logo">
              <img src="https://cdn-icons-png.flaticon.com/512/134/134914.png">
            </div>
          </div>
          <div class="chat-close">
            <div class="logo">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
            </div>
          </div>
          <div class="chat-box">
            <div class="chat-header">
              <div class="chat-back">
                <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-left"><line x1="19" y1="12" x2="5" y2="12"></line><polyline points="12 19 5 12 12 5"></polyline></svg>
              </div>
              <div class="chat-title">
                QChat
              </div>
            </div>
            <div class="chat-list-person">
              <div class="content">
                <div class="list-data">
                  <div class="dp-picture">
                    <img src="https://www.sunsetlearning.com/wp-content/uploads/2019/09/User-Icon-Grey-300x300.png">
                  </div>
                  <div class="dp-message">
                    <h4>Qolbu</h4>
                    <div class="dp-status">
                      <div class="status-icon">
                        <div class="sent">
                          <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="#bdbdbd" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check"><polyline points="20 6 9 17 4 12"></polyline></svg>
                        </div>
                        <div class="read">
                          <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="${settings.color}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check"><polyline points="20 6 9 17 4 12"></polyline></svg>
                          <svg style="margin-left: -13px;" xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="${settings.color}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check"><polyline points="20 6 9 17 4 12"></polyline></svg>
                        </div>
                      </div>
                      <!-- <div class="srar" -->
                      <h5>Message</h5>
                    </div>
                  </div>
                </div>
                <div class="msg-status">
                  <h6>13:00</h6>
                  <div class="unread">1</div>
                </div>
              </div>
            </div>
            <div class="chat-content" style="display: none">
              <div class="chat-content-list">
              </div>
              <div class="chat-control">
                <input type="text" id="chat-input" placeholder="Ketik pesan">
                <button id="btn-send">
                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#ffffff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-send"><line x1="22" y1="2" x2="11" y2="13"></line><polygon points="22 2 15 22 11 13 2 9 22 2"></polygon></svg>
                </button>
              </div>
            </div>
          </div>
        `);

        $(".chat-list-person").slimScroll({height: 'calc(100% - 50px)'});

        $(".chat-bubble").click(function() {
          $(this).hide();
          $(".chat-close").css('display', 'flex');
          $(".chat-box").css({'opacity': 1, 'visibility': 'visible'});
        });

        $(".chat-close").click(function() {
          $(this).hide();
          $(".chat-bubble").css('display', 'flex');
          $(".chat-box").css({'opacity': 0, 'visibility': 'hidden'});
        })

        $(".chat-back").click(function() {
          $(this).hide();
          $(".chat-title").text('QChat')
          $(".chat-content").hide();
          $(".chat-list-person").slimScroll({height: 'calc(100% - 50px)'});
        })
    };
}(jQuery));