/*! Copyright (c) 2021 Qolbu Dzikru ROsyadi (http://qolbudr.github.io)
 * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)
 * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.
 *
 * Version: 1.0.0
 *
 */
class QChat{static startChat({myId:e,toId:t,myName:n,toName:s,message:i}){let o=e.toString(),a=t.toString();db.collection("user").doc(o).set({id:e,name:n,created:+new Date},{merge:!0}),db.collection("user").doc(a).set({id:t,name:s,created:+new Date},{merge:!0}),db.collection("group").add({created:+new Date,createdBy:e,members:[e,t],recentMessage:{text:i,read:!1,sent:+new Date,sender:e}},{merge:!0}).then(function(t){db.collection(`message/${t.id}/messages`).doc().set({sent:+new Date,sender:e,message:i,read:!1})})}static getMemberData(e,t,n){let s=this;t.forEach(function(t){t!=e&&(s=t)});let i=s.toString();db.collection("user").doc(i).get().then(function(e){let t=e.data();$(`.content[groupId=${n}] h4`).text(t.name)})}static getUnreadCount(e,t){db.collection(`message/${t}/messages`).where("read","==",!1).onSnapshot(function(n){let s=[];n.forEach(function(t){const n=t.data();n.sender!=e&&(n.id=t.id,s.push(n))}),s.length>0?($(`.content[groupId=${t}] .unread`).show(),$(`.content[groupId=${t}] .unread`).text(s.length)):$(`.content[groupId=${t}] .unread`).hide()})}static getChat(e,t,n,s){db.collection(`message/${t}/messages`).orderBy("sent","asc").onSnapshot(function(t){$(`${n} .chat-content-list`).html(""),t.forEach(function(t){let i=t.data();if(i.sender!=e){let e=new Date(i.sent),t=`${e.getHours()}:${("0"+e.getMinutes()).slice(-2)}`;$(`${n} .chat-content-list`).append(`\n              <div class="chat-reply">\n                <div class="text">\n                  <div class="text-data">${i.message}</div>\n                  <div class="text-time">${t}</div>\n                </div>\n              </div>\n            `)}else{let e=new Date(i.sent),t=`${e.getHours()}:${("0"+e.getMinutes()).slice(-2)}`;$(`${n} .chat-content-list`).append(`\n              <div class="chat-send">\n                <div class="text" style="background-color: ${s}">\n                  <div class="text-data">${i.message}</div>\n                  <div class="text-time">${t}</div>\n                </div>\n              </div>\n            `)}});$(`${n} .chat-content-list`).height();$(`${n} .chat-content-list`).slimScroll({scrollTo:1e4})})}static markAsRead(e,t){let n=db.doc(`group/${t}`),s=db.collection(`message/${t}/messages`);n.get().then(function(t){t.data().recentMessage.sender!=e&&n.set({recentMessage:{read:!0}},{merge:!0})}),s.where("read","==",!1).get().then(function(t){t.forEach(function(t){t.data().sender!=e&&s.doc(t.id).set({read:!0},{merge:!0})})})}static sendChat(e,t,n){const s={read:!1,sent:+new Date,text:n,sender:e},i={read:!1,sent:+new Date,message:n,sender:e};db.doc(`group/${t}`).set({recentMessage:s},{merge:!0}),db.collection(`message/${t}/messages`).add(i)}static getListChat(e,t){const n=this;return new Promise((s,i)=>{db.collection("group").where("members","array-contains",e.myId).onSnapshot(s=>{const i=[];s.forEach(e=>{const t=e.data();t.id=e.id,t.recentMessage&&i.push(t)}),n.groups=i,$(`${t} .chat-list-person`).html(""),i.forEach(function(n){let s=new Date(n.recentMessage.sent),i=`${s.getHours()}:${("0"+s.getMinutes()).slice(-2)}`;$(`${t} .chat-list-person`).append(`\n            <div class="content" groupId="${n.id}">\n              <div class="list-data">\n                <div class="dp-picture">\n                  <img src="https://www.sunsetlearning.com/wp-content/uploads/2019/09/User-Icon-Grey-300x300.png">\n                </div>\n                <div class="dp-message">\n                  <h4>Qolbu</h4>\n                  <div class="dp-status">\n                    <div class="status-icon">\n                      <div class="sent">\n                        <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="#bdbdbd" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check"><polyline points="20 6 9 17 4 12"></polyline></svg>\n                      </div>\n                      <div class="read">\n                        <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="${e.color}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check"><polyline points="20 6 9 17 4 12"></polyline></svg>\n                        <svg style="margin-left: -13px;" xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="${e.color}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check"><polyline points="20 6 9 17 4 12"></polyline></svg>\n                      </div>\n                    </div>\n                    <div class="truncate">\n                      <h5>${n.recentMessage.text}</h5>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class="msg-status">\n                <h6>${i}</h6>\n                <div class="unread" style="background-color: ${e.color}">1</div>\n              </div>\n            </div>\n          `),n.recentMessage.sender!=e.myId?$(`${t} .content[groupId=${n.id}] .status-icon`).hide():($(`${t} .content[groupId=${n.id}] .status-icon`).show(),1==n.recentMessage.read?($(`${t} .content[groupId=${n.id}] .read`).show(),$(`${t} .content[groupId=${n.id}] .sent`).hide()):($(`${t} .content[groupId=${n.id}] .sent`).show(),$(`${t} .content[groupId=${n.id}] .read`).hide())),QChat.getMemberData(e.myId,n.members,n.id),QChat.getUnreadCount(e.myId,n.id),$(`${t} .chat-list-person .content`).click(function(){let n=$(`${t} .chat-box`).height()-117,s=$(this).find("h4:first").text(),i=$(this).attr("groupId");$(`${t} .chat-list-person`).slimScroll({height:"0"}),$(`${t} .chat-content-list`).slimScroll({height:n}),$(`${t} .chat-content-list`).css({height:n-29}),$(`${t} .chat-content`).show(),$(`${t} .chat-back`).show(),$(`${t} #chat-input`).attr("groupId",i),$(`${t} #btn-send`).attr("groupId",i),$(`${t} .chat-title`).text(s),QChat.getChat(e.myId,i,t,e.color),QChat.markAsRead(e.myId,i)})})})})}}!function(e){e.fn.qchatInit=function(t){var n=e.extend({color:"#2c9cff",myId:null,logo:"https://cdn-icons-png.flaticon.com/512/134/134914.png"},t);if(null==n.myId)throw"Your id cannot be null";let s=`#${this[0].id}`;QChat.getListChat(n,s),this.append(`\n          <div id="qchat-element">\n            <div class="chat-bubble">\n              <div class="logo">\n                <img src="${n.logo}">\n              </div>\n            </div>\n            <div class="chat-close">\n              <div class="logo">\n                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>\n              </div>\n            </div>\n            <div class="chat-box">\n              <div class="chat-header">\n                <div class="chat-back">\n                  <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-arrow-left"><line x1="19" y1="12" x2="5" y2="12"></line><polyline points="12 19 5 12 12 5"></polyline></svg>\n                </div>\n                <div class="chat-title">\n                  QChat\n                </div>\n              </div>\n              <div class="chat-list-person">\n                <div class="content">\n                  <div class="list-data">\n                    <div class="dp-picture">\n                      <img src="https://www.sunsetlearning.com/wp-content/uploads/2019/09/User-Icon-Grey-300x300.png">\n                    </div>\n                    <div class="dp-message">\n                      <h4>Qolbu</h4>\n                      <div class="dp-status">\n                        <div class="status-icon">\n                          <div class="sent">\n                            <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="#bdbdbd" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check"><polyline points="20 6 9 17 4 12"></polyline></svg>\n                          </div>\n                          <div class="read">\n                            <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="${n.color}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check"><polyline points="20 6 9 17 4 12"></polyline></svg>\n                            <svg style="margin-left: -13px;" xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="${n.color}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check"><polyline points="20 6 9 17 4 12"></polyline></svg>\n                          </div>\n                        </div>\n                        <div class="truncate">\n                          <h5>Message</h5>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class="msg-status">\n                    <h6>13:00</h6>\n                    <div class="unread" style="background-color:${n.color}">1</div>\n                  </div>\n                </div>\n              </div>\n              <div class="chat-content" style="display: none">\n                <div class="chat-content-list">\n                </div>\n                <div class="chat-control">\n                  <input type="text" id="chat-input" placeholder="Ketik pesan">\n                  <button id="btn-send" style="background-color:${n.color}">\n                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#ffffff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-send"><line x1="22" y1="2" x2="11" y2="13"></line><polygon points="22 2 15 22 11 13 2 9 22 2"></polygon></svg>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        `),e(`${s} .chat-list-person`).slimScroll({height:"calc(100% - 50px)"}),e(`${s} .chat-bubble`).click(function(){e(this).hide(),e(`${s} .chat-close`).css("display","flex"),e(`${s} .chat-box`).css({opacity:1,visibility:"visible"})}),e(`${s} #btn-send`).prop("disabled",!0),e(`${s} #btn-send`).click(function(){let t=e(`${s} #chat-input`).val(),i=e(this).attr("groupId");e(`${s} #chat-input`).val(""),e(this).prop("disabled",!0),QChat.sendChat(n.myId,i,t)}),e(`${s} #chat-input`).on("keyup",function(t){let i=e(this).val(),o=e(this).attr("groupId");if(/\S/.test(i))e(`${s} #btn-send`).prop("disabled",!1),13==t.keyCode&&(e(`${s} #chat-input`).val(""),e(`${s} #btn-send`).prop("disabled",!0),QChat.sendChat(n.myId,o,i));else if(e(`${s} #btn-send`).prop("disabled",!0),13==t.keyCode)return!1}),e(`${s} .chat-close`).click(function(){e(this).hide(),e(`${s} .chat-bubble`).css("display","flex"),e(`${s} .chat-box`).css({opacity:0,visibility:"hidden"})}),e(`${s} .chat-back`).click(function(){e(this).hide(),e(`${s} .chat-title`).text("QChat"),e(`${s} .chat-content`).hide(),e(`${s} .chat-list-person`).slimScroll({height:"calc(100% - 50px)"})})}}(jQuery);